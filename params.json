{"name":"Boomcoin","tagline":"","body":"![](http://imgur.com/mjXVIiX.png)\r\n\r\n###What is Boomcoin?\r\nBoomcoin is a lite version of Bitcoin using scrypt-adaptive-N as a proof-of-work algorithm.\r\n\r\n* 2.5 minute block targets\r\n* subsidy halves in 840k blocks (~4 years)\r\n* ~1 Billion total coins \r\n* 600 coins per block\r\n* Every block to retarget difficulty with Kimotos Gravity Well algorithm\r\n* Decreased rewards the first week to reduce instamine or dump\r\n* Redesigned QT\r\n* Ability to send messages with transactions\r\n\r\n###License\r\n\r\nBoomcoin is released under the terms of the MIT license. See COPYING for more information or see http://opensource.org/licenses/MIT.\r\n\r\n###Copyrights \r\n* (c) 2009-2013 Bitcoin Developers Copyright \r\n* (c) 2011-2013 Litecoin Developers Copyright \r\n* (c) 2014 Vertcoin Developers\r\n* (c) 2014 Boomcoin Developers\r\n\r\n\r\n###Development process\r\n\r\nDevelopers work in their own trees, then submit pull requests when they think their feature or bug fix is ready.\r\n\r\nIf it is a simple/trivial/non-controversial change, then one of the Boomcoin development team members simply pulls it.\r\n\r\nIf it is a more complicated or potentially controversial change, then the patch submitter will be asked to start a discussion (if they haven't already) on the mailing list.\r\n\r\nThe patch will be accepted if there is broad consensus that it is a good thing. Developers should expect to rework and resubmit patches if the code doesn't match the project's coding conventions (see doc/coding.txt) or are controversial.\r\n\r\nThe master branch is regularly built and tested, but is not guaranteed to be completely stable. Tags are created regularly to indicate new official, stable release versions of Boomcoin.\r\n\r\n###Testing\r\n\r\nTesting and code review is the bottleneck for development; we get more pull requests than we can review and test. Please be patient and help out, and remember this is a security-critical project where any mistake might cost people lots of money.\r\n\r\n###Automated Testing\r\n\r\nDevelopers are strongly encouraged to write unit tests for new code, and to submit new unit tests for old code.\r\n\r\nUnit tests for the core code are in src/test/. To compile and run them:\r\n\r\n`cd src; make -f makefile.unix test`\r\n\r\nUnit tests for the GUI code are in src/qt/test/. To compile and run them:\r\n\r\n`qmake BITCOIN_QT_TEST=1 -o Makefile.test bitcoin-qt.pro`\r\n`make -f Makefile.test`\r\n`./boomcoin-qt_test`\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}